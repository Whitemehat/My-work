
running_number:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 c5 2f 00 00 	mov    0x2fc5(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <printf@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <srand@plt>:
    1050:	ff 25 ba 2f 00 00    	jmp    *0x2fba(%rip)        # 4010 <srand@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__isoc99_scanf@plt>:
    1060:	ff 25 b2 2f 00 00    	jmp    *0x2fb2(%rip)        # 4018 <__isoc99_scanf@GLIBC_2.7>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <rand@plt>:
    1070:	ff 25 aa 2f 00 00    	jmp    *0x2faa(%rip)        # 4020 <rand@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001080 <__cxa_finalize@plt>:
    1080:	ff 25 5a 2f 00 00    	jmp    *0x2f5a(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1086:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001090 <_start>:
    1090:	31 ed                	xor    %ebp,%ebp
    1092:	49 89 d1             	mov    %rdx,%r9
    1095:	5e                   	pop    %rsi
    1096:	48 89 e2             	mov    %rsp,%rdx
    1099:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    109d:	50                   	push   %rax
    109e:	54                   	push   %rsp
    109f:	45 31 c0             	xor    %r8d,%r8d
    10a2:	31 c9                	xor    %ecx,%ecx
    10a4:	48 8d 3d ce 00 00 00 	lea    0xce(%rip),%rdi        # 1179 <main>
    10ab:	ff 15 0f 2f 00 00    	call   *0x2f0f(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    10b1:	f4                   	hlt
    10b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10b9:	00 00 00 
    10bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000010c0 <deregister_tm_clones>:
    10c0:	48 8d 3d 71 2f 00 00 	lea    0x2f71(%rip),%rdi        # 4038 <__TMC_END__>
    10c7:	48 8d 05 6a 2f 00 00 	lea    0x2f6a(%rip),%rax        # 4038 <__TMC_END__>
    10ce:	48 39 f8             	cmp    %rdi,%rax
    10d1:	74 15                	je     10e8 <deregister_tm_clones+0x28>
    10d3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10da:	48 85 c0             	test   %rax,%rax
    10dd:	74 09                	je     10e8 <deregister_tm_clones+0x28>
    10df:	ff e0                	jmp    *%rax
    10e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10e8:	c3                   	ret
    10e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010f0 <register_tm_clones>:
    10f0:	48 8d 3d 41 2f 00 00 	lea    0x2f41(%rip),%rdi        # 4038 <__TMC_END__>
    10f7:	48 8d 35 3a 2f 00 00 	lea    0x2f3a(%rip),%rsi        # 4038 <__TMC_END__>
    10fe:	48 29 fe             	sub    %rdi,%rsi
    1101:	48 89 f0             	mov    %rsi,%rax
    1104:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1108:	48 c1 f8 03          	sar    $0x3,%rax
    110c:	48 01 c6             	add    %rax,%rsi
    110f:	48 d1 fe             	sar    $1,%rsi
    1112:	74 14                	je     1128 <register_tm_clones+0x38>
    1114:	48 8b 05 bd 2e 00 00 	mov    0x2ebd(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    111b:	48 85 c0             	test   %rax,%rax
    111e:	74 08                	je     1128 <register_tm_clones+0x38>
    1120:	ff e0                	jmp    *%rax
    1122:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1128:	c3                   	ret
    1129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001130 <__do_global_dtors_aux>:
    1130:	f3 0f 1e fa          	endbr64
    1134:	80 3d fd 2e 00 00 00 	cmpb   $0x0,0x2efd(%rip)        # 4038 <__TMC_END__>
    113b:	75 2b                	jne    1168 <__do_global_dtors_aux+0x38>
    113d:	55                   	push   %rbp
    113e:	48 83 3d 9a 2e 00 00 	cmpq   $0x0,0x2e9a(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1145:	00 
    1146:	48 89 e5             	mov    %rsp,%rbp
    1149:	74 0c                	je     1157 <__do_global_dtors_aux+0x27>
    114b:	48 8b 3d de 2e 00 00 	mov    0x2ede(%rip),%rdi        # 4030 <__dso_handle>
    1152:	e8 29 ff ff ff       	call   1080 <__cxa_finalize@plt>
    1157:	e8 64 ff ff ff       	call   10c0 <deregister_tm_clones>
    115c:	c6 05 d5 2e 00 00 01 	movb   $0x1,0x2ed5(%rip)        # 4038 <__TMC_END__>
    1163:	5d                   	pop    %rbp
    1164:	c3                   	ret
    1165:	0f 1f 00             	nopl   (%rax)
    1168:	c3                   	ret
    1169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001170 <frame_dummy>:
    1170:	f3 0f 1e fa          	endbr64
    1174:	e9 77 ff ff ff       	jmp    10f0 <register_tm_clones>

0000000000001179 <main>:
    1179:	55                   	push   %rbp
    117a:	48 89 e5             	mov    %rsp,%rbp
    117d:	48 83 ec 20          	sub    $0x20,%rsp
    1181:	48 8d 05 7c 0e 00 00 	lea    0xe7c(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    1188:	48 89 c7             	mov    %rax,%rdi
    118b:	b8 00 00 00 00       	mov    $0x0,%eax
    1190:	e8 ab fe ff ff       	call   1040 <printf@plt>
    1195:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    1199:	48 89 c6             	mov    %rax,%rsi
    119c:	48 8d 05 68 0e 00 00 	lea    0xe68(%rip),%rax        # 200b <_IO_stdin_used+0xb>
    11a3:	48 89 c7             	mov    %rax,%rdi
    11a6:	b8 00 00 00 00       	mov    $0x0,%eax
    11ab:	e8 b0 fe ff ff       	call   1060 <__isoc99_scanf@plt>
    11b0:	8b 45 e8             	mov    -0x18(%rbp),%eax
    11b3:	89 c7                	mov    %eax,%edi
    11b5:	e8 96 fe ff ff       	call   1050 <srand@plt>
    11ba:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    11c1:	00 
    11c2:	c7 45 fc 07 0a 00 00 	movl   $0xa07,-0x4(%rbp)
    11c9:	eb 38                	jmp    1203 <main+0x8a>
    11cb:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    11ce:	48 63 c1             	movslq %ecx,%rax
    11d1:	48 69 c0 56 55 55 55 	imul   $0x55555556,%rax,%rax
    11d8:	48 c1 e8 20          	shr    $0x20,%rax
    11dc:	48 89 c2             	mov    %rax,%rdx
    11df:	89 c8                	mov    %ecx,%eax
    11e1:	c1 f8 1f             	sar    $0x1f,%eax
    11e4:	29 c2                	sub    %eax,%edx
    11e6:	89 d0                	mov    %edx,%eax
    11e8:	01 c0                	add    %eax,%eax
    11ea:	01 d0                	add    %edx,%eax
    11ec:	29 c1                	sub    %eax,%ecx
    11ee:	89 ca                	mov    %ecx,%edx
    11f0:	85 d2                	test   %edx,%edx
    11f2:	74 0b                	je     11ff <main+0x86>
    11f4:	e8 77 fe ff ff       	call   1070 <rand@plt>
    11f9:	48 98                	cltq
    11fb:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    11ff:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
    1203:	81 7d fc e7 07 00 00 	cmpl   $0x7e7,-0x4(%rbp)
    120a:	7f bf                	jg     11cb <main+0x52>
    120c:	48 b8 a6 bf 48 ad 5a 	movabs $0x5aad48bfa6,%rax
    1213:	00 00 00 
    1216:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    121a:	75 74                	jne    1290 <main+0x117>
    121c:	48 8d 05 eb 0d 00 00 	lea    0xdeb(%rip),%rax        # 200e <_IO_stdin_used+0xe>
    1223:	48 89 c7             	mov    %rax,%rdi
    1226:	b8 00 00 00 00       	mov    $0x0,%eax
    122b:	e8 10 fe ff ff       	call   1040 <printf@plt>
    1230:	c7 45 fc 0a 00 00 00 	movl   $0xa,-0x4(%rbp)
    1237:	eb 40                	jmp    1279 <main+0x100>
    1239:	8b 45 fc             	mov    -0x4(%rbp),%eax
    123c:	83 e0 01             	and    $0x1,%eax
    123f:	85 c0                	test   %eax,%eax
    1241:	75 32                	jne    1275 <main+0xfc>
    1243:	e8 28 fe ff ff       	call   1070 <rand@plt>
    1248:	89 c2                	mov    %eax,%edx
    124a:	89 d0                	mov    %edx,%eax
    124c:	c1 f8 1f             	sar    $0x1f,%eax
    124f:	c1 e8 1c             	shr    $0x1c,%eax
    1252:	01 c2                	add    %eax,%edx
    1254:	83 e2 0f             	and    $0xf,%edx
    1257:	29 c2                	sub    %eax,%edx
    1259:	89 55 ec             	mov    %edx,-0x14(%rbp)
    125c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    125f:	89 c6                	mov    %eax,%esi
    1261:	48 8d 05 af 0d 00 00 	lea    0xdaf(%rip),%rax        # 2017 <_IO_stdin_used+0x17>
    1268:	48 89 c7             	mov    %rax,%rdi
    126b:	b8 00 00 00 00       	mov    $0x0,%eax
    1270:	e8 cb fd ff ff       	call   1040 <printf@plt>
    1275:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1279:	83 7d fc 49          	cmpl   $0x49,-0x4(%rbp)
    127d:	7e ba                	jle    1239 <main+0xc0>
    127f:	48 8d 05 94 0d 00 00 	lea    0xd94(%rip),%rax        # 201a <_IO_stdin_used+0x1a>
    1286:	48 89 c7             	mov    %rax,%rdi
    1289:	e8 a2 fd ff ff       	call   1030 <puts@plt>
    128e:	eb 0f                	jmp    129f <main+0x126>
    1290:	48 8d 05 85 0d 00 00 	lea    0xd85(%rip),%rax        # 201c <_IO_stdin_used+0x1c>
    1297:	48 89 c7             	mov    %rax,%rdi
    129a:	e8 91 fd ff ff       	call   1030 <puts@plt>
    129f:	b8 00 00 00 00       	mov    $0x0,%eax
    12a4:	c9                   	leave
    12a5:	c3                   	ret

Disassembly of section .fini:

00000000000012a8 <_fini>:
    12a8:	48 83 ec 08          	sub    $0x8,%rsp
    12ac:	48 83 c4 08          	add    $0x8,%rsp
    12b0:	c3                   	ret
